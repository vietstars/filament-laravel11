server {
  listen 80;
  listen [::]:80;

  root /var/www/dev.org/public;

  # Add index.php to the list if you are using PHP
  index index.php index.html index.htm index.nginx-debian.html;

  server_name dev.org www.dev.org;

  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ /index.php$is_args$args;
  }

  location /cache {
    add_header Content-Type text/plain;
  }

  #Cache.appcache, your document html and data
  location ~* \.(?:manifest|appcache|html?|xml|json)$ { 
    expires -1;
    access_log /var/log/nginx/static.log;
  }

  location ~ \.(css|js|png|jpg|jpeg|gif|svg|webp|bmp|woff|woff2|ttf|otf|eot|csv|pdf|html|xls|xlsx|doc|docx|ppt|pptx|ico|txt|rtf|zip|rar|tar) {
    expires 1y;
    access_log off;
    add_header Cache-Control "public";
  }

  # CSS and Javascript
  location ~* \.(?:css|js)$ {
    expires 1y;
    access_log off;
    add_header Cache-Control "public";
  }

  # pass PHP scripts to FastCGI server
  
  location ~ \.php$ {
    #include snippets/fastcgi-php.conf;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    # With php-fpm (or other unix sockets):
    fastcgi_pass unix:/run/php/php8.2-fpm.sock;
    # With php-cgi (or other tcp sockets):
    #fastcgi_pass 127.0.0.1:9000;

    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include fastcgi_params;
  }

  # deny access to .htaccess files, if Apache's document root
  # concurs with nginx's one
  #
  #location ~ /\.ht {
  # deny all;
  #}
}

server {
  listen 443 ssl default_server;
  listen [::]:443 ssl default_server;

  ssl_certificate /etc/nginx/certs/tls.crt;
  ssl_certificate_key /etc/nginx/certs/tls.key;

  # Note: You should disable gzip for SSL traffic.
  # See: https://bugs.debian.org/773332

  # Read up on ssl_ciphers to ensure a secure configuration.
  # See: https://bugs.debian.org/765782

  # Self signed certs generated by the ssl-cert package
  # Don't use them in a production server!

  # include snippets/snakeoil.conf;

  root /var/www/dev.org/public;

  # Add index.php to the list if you are using PHP
  index index.php index.html index.htm index.nginx-debian.html;

  server_name dev.org www.dev.org;

  location / {
    # First attempt to serve request as file, then
    # as directory, then fall back to displaying a 404.
    try_files $uri $uri/ /index.php$is_args$args;
  }

#  location /cache {
#      add_header Content-Type text/plain;
#  }
#
#  #Cache.appcache, your document html and data
#  location ~* \.(?:manifest|appcache|html?|xml|json)$ { 
#      expires -1;
#      access_log logs/static.log; # I don't usually include a static log
#  }
#
# location ~ \.(css|js|png|jpg|jpeg|gif|svg|webp|bmp|woff|woff2|ttf|otf|eot|csv|pdf|html|xls|xlsx|doc|docx|ppt|pptx|ico|txt|rtf|zip|rar|tar) {
#      expires 1y;
#      access_log off;
#      add_header Cache-Control "public";
#  }
#
#  # CSS and Javascript
#  location ~* \.(?:css|js)$ {
#      expires 1y;
#      access_log off;
#      add_header Cache-Control "public";
#  }

  # pass PHP scripts to FastCGI server
  location ~ \.php$ {
    #include snippets/fastcgi-php.conf;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    # With php-fpm (or other unix sockets):
    fastcgi_pass unix:/run/php/php8.2-fpm.sock;
    # With php-cgi (or other tcp sockets):
    #fastcgi_pass 127.0.0.1:9000;

    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    include fastcgi_params;
  }

  # deny access to .htaccess files, if Apache's document root
  # concurs with nginx's one

  #location ~ /\.ht {
  # deny all;
  #}
}
